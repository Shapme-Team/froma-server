### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address {
  city: String!
  id: ID!
  mainAddress: String!
  nearBy: String
  orders: [Order]
  phoneNumber: Int!
  pincode: Int!
  state: String!
  user: User
  userId: String
}

input AddressInputType {
  city: String!
  mainAddress: String!
  nearBy: String
  phoneNumber: Int!
  pincode: Int!
  state: String!
  userId: String
}

type Cart {
  cartProducts: [CartProduct]
  id: ID!
  user: User
  userId: String
}

type CartProduct {
  id: ID!
  order: Order
  orderId: String
  product: Product
  productId: String
}

type Category {
  id: ID!
  name: String!
  products: [Product]
  subcategories: [SubCategory]
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  addAddressToUser(addressInputSchema: AddressInputType!, userId: String!): Address
  createCategory(name: String!): Category
  createProduct(productInput: ProductInputType!): Product
  createSellerData(sellerInputType: SellerInputType!): Seller
  createSubCategory(categoryId: String!, name: String!): SubCategory
  createUserData(userUniqueInput: UserUniqueInput!): User
}

type Order {
  addresId: String
  cartProducts: [CartProduct]
  createdAt: DateTime!
  id: ID!
  orderAddress: Address
  paymentMethod: String!
  user: User
  userId: String
}

type Product {
  availability: Boolean
  carts: [Cart]
  category: Category
  categoryId: String
  description: String!
  id: ID!
  imageUrl: String!
  orders: [Order]
  quantity: Int!
  seller: Seller
  sellerId: String
  stockQuantity: Int!
  subCategoryId: String
  subcategory: SubCategory
  title: String!
  unit: String!
  viewCount: Int!
  weight: String!
}

input ProductInputType {
  availability: Boolean
  categoryId: String
  description: String!
  imageUrl: String!
  price: Int!
  quantity: Int!
  sellerId: String
  stockQuantity: Int!
  subCategoryId: String
  title: String!
  unit: String!
  viewCount: Int!
  weight: String!
}

type Query {
  getAllCategory: [Category]
  getAllProducts: [Product]
  getAllSellers: [Seller]
  getAllUsers: [User]
}

type Seller {
  email: String!
  id: ID!
  name: String
  phoneNumber: Int!
  products: [Product]
}

input SellerInputType {
  email: String!
  id: ID!
  name: String!
  phoneNumber: Int!
}

input SellerUniqueInput {
  email: String!
  name: String!
  phoneNumber: Int
}

type SubCategory {
  category: Category
  categoryid: String
  id: ID!
  name: String!
  products: [Product]
}

type User {
  address: [Address]
  cart: Cart
  email: String!
  id: ID!
  name: String!
  orders: [Order]
  phoneNumber: Int
}

input UserUniqueInput {
  email: String!
  name: String!
  phoneNumber: Int
}
