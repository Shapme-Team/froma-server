generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

/// user model
model User {
  id          String    @id
  name        String
  email       String    @unique
  phoneNumber Int?
  address     Address[]
  orders      Order[]
  cart        Cart?
}

model Address {
  id String @id @default(cuid())

  city        String
  phoneNumber Int
  state       String
  pincode     Int
  landmark    String?
  houseNumber String
  area        String
  fullName    String

  // user ---- relation
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
  orders Order[]
}

model Cart {
  id       String        @id @default(cuid())
  products CartProduct[]
  user     User?         @relation(fields: [userId], references: [id])
  userId   String?
}

model Order {
  id            String   @id 
  createdAt     DateTime @default(now())

  cartProducts CartProduct[]
  orderStatus String?
  paymentMethod String
  paymentStatus String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  orderAddress Address? @relation(fields: [addresId], references: [id])
  addresId     String?

}

model Seller {
  id          String    @id
  email       String    @unique
  name        String?
  phoneNumber Int
  products    Product[]
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title         String
  description   String
  imageUrl      String
  unit          String       @default("gm")
  // quantity      Int          @default(1)
  weight        Int?
  price         Int?         @default(10)
  // category ---- relation
  category      Category?    @relation(fields: [categoryId], references: [id])
  categoryId    String?
  // subCategory ---- relation
  subcategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId String?
  availability  Boolean?     @default(true)
  stockQuantity Int
  viewCount     Int          @default(0)
  // seller ---- relation
  seller        Seller?      @relation(fields: [sellerId], references: [id])
  sellerId      String?

  // ---------- product extra references ------
  // cart ---- relation
  // order ---- relation
  cartProduct CartProduct[]
}

/// product model with quantity information
model CartProduct {
  id        String   @id @default(cuid())
  product   Product? @relation(fields: [productId], references: [id])
  productId String?

  order   Order?  @relation(fields: [orderId], references: [id])
  orderId String?

  cart     Cart?   @relation(fields: [cartId], references: [id])
  cartId   String?
  quantity Int?    @default(1)
}

model Category {
  id            String        @id @default(cuid())
  name          String
  subcategories SubCategory[]
  product       Product[]
}

model SubCategory {
  id         String    @id @default(cuid())
  name       String
  categorie  Category? @relation(fields: [categoryid], references: [id])
  categoryid String?
  product    Product[]
}
